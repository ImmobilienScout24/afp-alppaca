#!/bin/bash
#
# /etc/rc.d/init.d/alppaca
#
### BEGIN INIT INFO
# Provides: alppaca
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Alppaca
# Description: A(mazing)LocalPrefetchProxyforAmazonCredentiAls
### END INIT INFO
#
# Source function library
. /etc/rc.d/init.d/functions

APPLICATION="alppaca"
PROC="${APPLICATION}d"
# LOCKFILE must have the same basename as the init script, otherwise the
# script /etc/rc will be confused, at least on RHEL 6. One symptom is
# that the service is not stopped on reboot.
LOCKFILE="/var/lock/subsys/$(basename $0)"
LOGDIR="/var/log/$APPLICATION"

start() {
    local RETVAL=1
    local STARTTIMEOUT=${STARTTIMEOUT:=60}
    local BINPATH="/usr/bin"

    if ! status $PROC > /dev/null 2>&1; then
        echo -n $"Starting ${APPLICATION}: "

        daemonize -u alppaca -l $LOCKFILE \
            -o $LOGDIR/${PROC}_init.log \
            -e $LOGDIR/${PROC}_err.log \
            -c $BINPATH \
            "${BINPATH}"/${PROC}

        while [ "$RETVAL" -eq '1' -a "$STARTTIMEOUT" -ge '0' ]; do
            sleep 1
            STARTTIMEOUT=$(( STARTTIMEOUT - 1 ))
            status $PROC > /dev/null 2>&1
            RETVAL=$?
        done

        if [ $RETVAL -eq 0 ]; then
                success
        else
                rm -f $LOCKFILE
                failure
        fi
        echo
    fi
    return $RETVAL
}

stop() {
    echo -n "Shutting down ${APPLICATION}:"
    killproc $PROC
    RETVAL=$?
    rm -f $LOCKFILE
    echo
    return $RETVAL
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

case "$1" in
    start)
        $1
        ;;
    stop)
        stop
        ;;
    status)
        status $PROC
        ;;
    restart)
        $1
        ;;
    reload)
        status $PROC > /dev/null 2>&1 || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    *)
        echo "Usage: <servicename> {start|stop|status|restart|reload|force-reload}"
        exit 1
        ;;
esac
exit $?
